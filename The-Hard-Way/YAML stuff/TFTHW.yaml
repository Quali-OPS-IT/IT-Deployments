apiVersion: torque.qualidev.com/v1
kind: Blueprint
metadata:
  name: terraform-learning-environment-eu-west-1
  description: "A Torque blueprint that provisions an AWS environment in eu-west-1 for learning Terraform using Terraform-The-Hard-Way."
  tags:
    - terraform
    - aws
    - learning
spec:
  resources:
    - name: terraform_vm
      type: aws:ec2:instance
      properties:
        instanceType: t3.micro
        ami: "{{ lookup('aws_ssm', '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2', 'eu-west-1') }}"
        keyName: "{{ AWS_KEY_NAME }}" # User-provided key for SSH access
        securityGroups:
          - default
        userData: |
          #!/bin/bash
          yum update -y
          yum install -y unzip wget git
          wget https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip
          unzip terraform_1.5.0_linux_amd64.zip
          mv terraform /usr/local/bin/
          git clone https://github.com/brikis98/terraform-the-hard-way /home/ec2-user/terraform-the-hard-way
          chown -R ec2-user:ec2-user /home/ec2-user/terraform-the-hard-way
        tags:
          Name: "Terraform Learning VM"
    - name: terraform_state
      type: aws:s3:bucket
      properties:
        bucketName: "terraform-learning-state-{{ unique }}"
        versioning: true
        tags:
          Name: "Terraform Learning State"
  outputs:
    vm_public_ip: 
      description: "Public IP of the Terraform learning VM"
      value: "{{ terraform_vm.publicIp }}"
    s3_bucket_name:
      description: "Terraform state S3 bucket name"
      value: "{{ terraform_state.bucketName }}"
  inputs:
    - name: AWS_KEY_NAME
      description: "The SSH key pair name for accessing the EC2 instance"
      type: string
      required: true
  instructions:
    postProvision:
      - "Connect to your EC2 instance using SSH: `ssh -i <your-key.pem> ec2-user@{{ terraform_vm.publicIp }}`"
      - "Navigate to the Terraform learning project: `cd /home/ec2-user/terraform-the-hard-way`"
      - "Initialize Terraform: `terraform init`"
      - "Run Terraform plan: `terraform plan`"
      - "Apply Terraform to provision infrastructure: `terraform apply`"
